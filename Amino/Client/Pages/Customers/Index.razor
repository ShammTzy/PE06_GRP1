@page "/customers/"
@inject HttpClient _client
@inject IJSRuntime js
@implements IDisposable
@attribute [Authorize]

<h3 class="card-title">Game Customers</h3>

<a href="/customers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Customer
</a>
<br />
<br />

@if (Customers == null)
{
<div class="alert alert-info">Loading Customers...</div> }
else
{
<table class="table" id="customersTable">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Home Address</th>
            <th>Contact Number</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var customer in Customers)
        {
        <tr>
            <td>@customer.FirstName @customer.LastName</td>
            <td>@customer.Address</td>
            <td>@customer.ContactNumber</td>
            <td>@customer.EmailAddress</td>
            <td>@customer.TaxId</td>
            <td>
                <a href="/customers/view/@customer.Id" class="btn btn-primary">
                    <span class="oi oi-book"></span>
                </a>
                <a href="/customers/edit/@customer.Id" class="btn btn-warning">
                    <span class="oi oi-pencil"></span>
                </a>
                <button class="btn btn-danger" @onclick="@(()=>Delete(customer.Id))">
                    <span class="oi oi-delete"></span>
                </button>
            </td>
        </tr>
}
    </tbody>
</table>}

@code {
    private List<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndPoint}");
    }

    async Task Delete(int customerId)
    {
        var customer = Customers.First(x => x.Id == customerId);
        bool confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.GamesEndPoint}/{customerId}");
            await OnInitializedAsync();
        }
    }

    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#customersTable");
    }

}